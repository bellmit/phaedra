<?xml version="1.0" encoding="UTF-8"?>
<?eclipse version="3.4"?>
<plugin>
   <extension-point id="fitModel" name="Curve Fit Model" schema="schema/fitModel.exsd"/>
   <extension-point id="curveRenderer" name="CurveRenderer" schema="schema/curveRenderer.exsd"/>
   <extension
         point="org.eclipse.core.runtime.adapters">
      <factory
            adaptableType="eu.openanalytics.phaedra.model.curve.vo.Curve"
            class="eu.openanalytics.phaedra.model.curve.util.AdapterFactory">
         <adapter
               type="eu.openanalytics.phaedra.model.protocol.vo.Feature">
         </adapter>
         <adapter
               type="eu.openanalytics.phaedra.model.plate.vo.Compound">
         </adapter>
         <adapter
               type="eu.openanalytics.phaedra.model.plate.vo.Plate">
         </adapter>
         <adapter
               type="eu.openanalytics.phaedra.model.plate.vo.Experiment">
         </adapter>
         <adapter
               type="eu.openanalytics.phaedra.model.protocol.vo.Protocol">
         </adapter>
         <adapter
               type="eu.openanalytics.phaedra.model.protocol.vo.ProtocolClass">
         </adapter>
         <adapter
               type="eu.openanalytics.phaedra.base.security.model.IOwnedObject">
         </adapter>
      </factory>
      <factory
            adaptableType="eu.openanalytics.phaedra.model.curve.vo.CRCurve"
            class="eu.openanalytics.phaedra.model.curve.util.AdapterFactory">
         <adapter
               type="eu.openanalytics.phaedra.model.protocol.vo.Feature">
         </adapter>
         <adapter
               type="eu.openanalytics.phaedra.model.plate.vo.Compound">
         </adapter>
         <adapter
               type="eu.openanalytics.phaedra.model.plate.vo.Plate">
         </adapter>
         <adapter
               type="eu.openanalytics.phaedra.model.plate.vo.Experiment">
         </adapter>
         <adapter
               type="eu.openanalytics.phaedra.model.protocol.vo.Protocol">
         </adapter>
         <adapter
               type="eu.openanalytics.phaedra.model.protocol.vo.ProtocolClass">
         </adapter>
         <adapter
               type="eu.openanalytics.phaedra.base.security.model.IOwnedObject">
         </adapter>
      </factory>
   </extension>
   <extension
         point="eu.openanalytics.phaedra.base.db.persistenceModel">
      <persistenceModel
            name="hca.model.curve">
         <entityClass
               class="eu.openanalytics.phaedra.model.curve.vo.CRCurve">
         </entityClass>
      </persistenceModel>
   </extension>
   <extension
         point="eu.openanalytics.phaedra.base.search.queryBuilderFactory">
      <queryBuilderFactory
            class="eu.openanalytics.phaedra.model.curve.search.QueryBuilderFactory"
            id="eu.openanalytics.phaedra.model.curve.search.QueryBuilderFactory">
      </queryBuilderFactory>
   </extension>
   <extension
         point="eu.openanalytics.phaedra.base.hook.hook">
      <hook
            class="eu.openanalytics.phaedra.model.curve.hook.PostCalculationFitter"
            hookPointId="eu.openanalytics.phaedra.calculation.calculationHookPoint"
            priority="1">
      </hook>
      <hook
            class="eu.openanalytics.phaedra.model.curve.hook.PostValidationFitter"
            hookPointId="eu.openanalytics.phaedra.validation.validationHookPoint"
            priority="1">
      </hook>
   </extension>
   <extension
         point="eu.openanalytics.phaedra.base.scripting.apiProvider">
      <apiProvider
            class="eu.openanalytics.phaedra.model.curve.ScriptAPI">
      </apiProvider>
   </extension>
   <extension
         point="eu.openanalytics.phaedra.base.scripting.jep.jepScanner">
      <jepScanner
            class="eu.openanalytics.phaedra.model.curve.util.JEPCurvePropertyScanner"
            name="eu.openanalytics.phaedra.model.curve.util.JEPCurvePropertyScanner">
      </jepScanner>
   </extension>

</plugin>
