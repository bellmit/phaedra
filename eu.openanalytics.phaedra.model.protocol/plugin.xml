<?xml version="1.0" encoding="UTF-8"?>
<?eclipse version="3.4"?>
<plugin>
   <extension-point id="uploadSystem" name="UploadSystem" schema="schema/uploadSystem.exsd"/>
   <extension
         point="eu.openanalytics.phaedra.base.db.persistenceModel">
      <persistenceModel
            name="hca.model.protocol">
         <entityClass
               class="eu.openanalytics.phaedra.model.protocol.vo.ProtocolClass">
         </entityClass>
         <entityClass
               class="eu.openanalytics.phaedra.model.protocol.vo.Protocol">
         </entityClass>
         <entityClass
               class="eu.openanalytics.phaedra.model.protocol.vo.Feature">
         </entityClass>
         <entityClass
               class="eu.openanalytics.phaedra.model.protocol.vo.FeatureGroup">
         </entityClass>
         <entityClass
               class="eu.openanalytics.phaedra.model.protocol.vo.FeatureClass">
         </entityClass>
         <entityClass
               class="eu.openanalytics.phaedra.model.protocol.vo.SubWellFeature">
         </entityClass>
         <entityClass
               class="eu.openanalytics.phaedra.model.protocol.vo.ImageSettings">
         </entityClass>
         <entityClass
               class="eu.openanalytics.phaedra.model.protocol.vo.ImageChannel">
         </entityClass>
         <entityClass
               class="eu.openanalytics.phaedra.model.protocol.vo.WellType">
         </entityClass>
      </persistenceModel>
   </extension>
   <extension
         point="org.eclipse.core.runtime.adapters">
      <factory
            adaptableType="eu.openanalytics.phaedra.model.protocol.vo.FeatureClass"
            class="eu.openanalytics.phaedra.model.protocol.util.AdapterFactory">
         <adapter
               type="eu.openanalytics.phaedra.model.protocol.vo.ProtocolClass">
         </adapter>
         <adapter
               type="eu.openanalytics.phaedra.model.protocol.vo.SubWellFeature">
         </adapter>
      </factory>
      <factory
            adaptableType="eu.openanalytics.phaedra.model.protocol.vo.SubWellFeature"
            class="eu.openanalytics.phaedra.model.protocol.util.AdapterFactory">
         <adapter
               type="eu.openanalytics.phaedra.model.protocol.vo.ProtocolClass">
         </adapter>
      </factory>
      <factory
            adaptableType="eu.openanalytics.phaedra.model.protocol.vo.Feature"
            class="eu.openanalytics.phaedra.model.protocol.util.AdapterFactory">
         <adapter
               type="eu.openanalytics.phaedra.model.protocol.vo.ProtocolClass">
         </adapter>
      </factory>
      <factory
            adaptableType="eu.openanalytics.phaedra.model.protocol.vo.Protocol"
            class="eu.openanalytics.phaedra.model.protocol.util.AdapterFactory">
         <adapter
               type="eu.openanalytics.phaedra.model.protocol.vo.ProtocolClass">
         </adapter>
      </factory>
   </extension>
   <extension
         point="eu.openanalytics.phaedra.base.search.queryBuilderFactory">
      <queryBuilderFactory
            class="eu.openanalytics.phaedra.model.protocol.search.QueryBuilderFactory"
            id="eu.openanalytics.phaedra.model.protocol.search.QueryBuilderFactory">
      </queryBuilderFactory>
   </extension>
   <extension
         point="eu.openanalytics.phaedra.base.search.securityFilter">
      <securityFilter
            class="eu.openanalytics.phaedra.model.protocol.search.ProtocolClassSecurityFilter"
            id="eu.openanalytics.phaedra.model.protocol.search.ProtocolClassSecurityFilter">
      </securityFilter>
   </extension>
   <extension
         point="eu.openanalytics.phaedra.base.scripting.apiProvider">
      <apiProvider
            class="eu.openanalytics.phaedra.model.protocol.ScriptAPI">
      </apiProvider>
   </extension>

</plugin>
